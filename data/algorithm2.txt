<start>最大最小距离平衡算法（平衡当前距离与后续最小距离）<end>
def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    best_score = -float('inf')
    best_node = unvisited_nodes[0]
    for node in unvisited_nodes:
        current_dist = distance_matrix[current_node][node]
        if current_dist <= 1e-10:
            current_dist = 1e-10 
        future_distances = [distance_matrix[node][n] for n in unvisited_nodes if n != node]
        min_future_dist = min(future_distances) if future_distances else float('inf')
        if min_future_dist <= 1e-10:
            min_future_dist = 1e-10  
        score = 0.7 * (1 / current_dist) + 0.3 * (1 / min_future_dist)
        if score > best_score:
            best_score = score
            best_node = node
    return best_node