<start>随机最近邻算法与最大最小距离平衡算法的结合<end>
def select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):
    import random
    import numpy as np
    if random.random() < 0.05 and len(unvisited_nodes) > 1:
        next_node = random.choice(unvisited_nodes)
    else:
        best_node = unvisited_nodes[0]
        for node in unvisited_nodes:
            current_dist = distance_matrix[current_node][node]
            min_future_dist = min([distance_matrix[node][n] for n in unvisited_nodes if n != node])
            score = 0.7 * (1/current_dist) + 0.3 * (1/min_future_dist)
            if score > np.max([score for node in unvisited_nodes]):
                best_node = node
        next_node = best_node
    return next_node